//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Profibiz.PracticeManager.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PracticeManagerEntities : DbContext
    {
        public PracticeManagerEntities()
            : base("name=PracticeManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MedicalServicesOrSupply> MedicalServicesOrSupplies { get; set; }
        public virtual DbSet<PatientMedicalCondition> PatientMedicalConditions { get; set; }
        public virtual DbSet<Patient> Patients { get; set; }
        public virtual DbSet<InsuranceCoverageHolder> InsuranceCoverageHolders { get; set; }
        public virtual DbSet<InsuranceCoverageHolderService> InsuranceCoverageHolderServices { get; set; }
        public virtual DbSet<InsuranceCoverage> InsuranceCoverages { get; set; }
        public virtual DbSet<InsuranceCoverageService> InsuranceCoverageServices { get; set; }
        public virtual DbSet<InsuranceProvider> InsuranceProviders { get; set; }
        public virtual DbSet<ProfessionalAssociation> ProfessionalAssociations { get; set; }
        public virtual DbSet<MedicalCondition> MedicalConditions { get; set; }
        public virtual DbSet<ServiceProviderAssociation> ServiceProviderAssociations { get; set; }
        public virtual DbSet<PatientPhoto> PatientPhotos { get; set; }
        public virtual DbSet<InsuranceProvidersViewGroupMapping> InsuranceProvidersViewGroupMappings { get; set; }
        public virtual DbSet<InsuranceProvidersViewGroup> InsuranceProvidersViewGroups { get; set; }
        public virtual DbSet<AppointmentBook> AppointmentBooks { get; set; }
        public virtual DbSet<AppointmentInsuranceProvider> AppointmentInsuranceProviders { get; set; }
        public virtual DbSet<PatientInsuranceCoverageView> PatientInsuranceCoverageViews { get; set; }
        public virtual DbSet<PatientInsuranceProvidersViewGroupView> PatientInsuranceProvidersViewGroupViews { get; set; }
        public virtual DbSet<PatientFamilyMemberView> PatientFamilyMemberViews { get; set; }
        public virtual DbSet<AppointmentT> AppointmentsT { get; set; }
        public virtual DbSet<InvoiceItem> InvoiceItems { get; set; }
        public virtual DbSet<InvoicePayment> InvoicePayments { get; set; }
        public virtual DbSet<PaymentT> PaymentsT { get; set; }
        public virtual DbSet<InvoiceV> InvoicesV { get; set; }
        public virtual DbSet<PatientV> PatientsV { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<PaymentV> PaymentsV { get; set; }
        public virtual DbSet<AppointmentV> AppointmentsV { get; set; }
        public virtual DbSet<ThirdPartyServiceProvider> ThirdPartyServiceProviders { get; set; }
        public virtual DbSet<ServiceProviderV> ServiceProviderVs { get; set; }
        public virtual DbSet<ServiceProviderService> ServiceProviderServices { get; set; }
        public virtual DbSet<AppointmentStatus> AppointmentStatuses { get; set; }
        public virtual DbSet<Referrer> Referrers { get; set; }
        public virtual DbSet<PatientsListView> PatientsListView { get; set; }
        public virtual DbSet<ClientError> ClientErrors { get; set; }
        public virtual DbSet<PatientAllFamilyMemberView> PatientAllFamilyMemberViews { get; set; }
        public virtual DbSet<NLogItem> NLogItems { get; set; }
        public virtual DbSet<InvoiceStatus> InvoiceStatuses { get; set; }
        public virtual DbSet<ServiceProvider> ServiceProviders { get; set; }
        public virtual DbSet<InvoiceT> InvoicesT { get; set; }
        public virtual DbSet<UserSetting> UserSettings { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<InsuranceCoverageV> InsuranceCoveragesV { get; set; }
        public virtual DbSet<InvoiceClaimStatus> InvoiceClaimStatuses { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<InvoiceClaimV> InvoiceClaimsV { get; set; }
        public virtual DbSet<InvoiceClaimT> InvoiceClaimsT { get; set; }
        public virtual DbSet<InsuranceCoverageItemCategory> InsuranceCoverageItemCategories { get; set; }
        public virtual DbSet<InsuranceCoverageItemHolder> InsuranceCoverageItemHolders { get; set; }
        public virtual DbSet<InsuranceCoverageItem> InsuranceCoverageItems { get; set; }
        public virtual DbSet<InvoicePaymentByDoctorsV> InvoicePaymentByDoctorsV { get; set; }
        public virtual DbSet<PayrollPaymentT> PayrollPaymentsT { get; set; }
        public virtual DbSet<PayrollPaymentAllocationT> PayrollPaymentAllocationsT { get; set; }
        public virtual DbSet<PayrollPaymentAllocationV> PayrollPaymentAllocationsV { get; set; }
        public virtual DbSet<PayrollPaymentV> PayrollPaymentsV { get; set; }
        public virtual DbSet<InvoicePaymentByDoctorAndPeriodView> InvoicePaymentByDoctorAndPeriodViews { get; set; }
        public virtual DbSet<PayrollPaymentByDoctorAndPeriodView> PayrollPaymentByDoctorAndPeriodViews { get; set; }
        public virtual DbSet<InvoiceRefundT> InvoiceRefundsT { get; set; }
        public virtual DbSet<RefundT> RefundsT { get; set; }
        public virtual DbSet<InvoiceRefundV> InvoiceRefundsV { get; set; }
        public virtual DbSet<RefundV> RefundsV { get; set; }
        public virtual DbSet<PaymentRefundT> PaymentRefundsT { get; set; }
        public virtual DbSet<PaymentRefundV> PaymentRefundsV { get; set; }
        public virtual DbSet<InvoiceAdvinfoV> InvoiceAdvinfoV { get; set; }
        public virtual DbSet<CalendarEventT> CalendarEventsT { get; set; }
        public virtual DbSet<CalendarEventStatus> CalendarEventStatuses { get; set; }
        public virtual DbSet<CalendarEventV> CalendarEventsV { get; set; }
        public virtual DbSet<CalendarEventsForRemainder> CalendarEventsForRemainders { get; set; }
        public virtual DbSet<PublicHoliday> PublicHolidays { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<InventoryT> InventoriesT { get; set; }
        public virtual DbSet<InventoryV> InventoriesV { get; set; }
        public virtual DbSet<OrderV> OrdersV { get; set; }
        public virtual DbSet<OrderT> OrdersT { get; set; }
        public virtual DbSet<OrderItemT> OrderItemsT { get; set; }
        public virtual DbSet<OrderItemV> OrderItemsV { get; set; }
        public virtual DbSet<InventoryBalance> InventoryBalances { get; set; }
        public virtual DbSet<MedicalHistoryRecordT> MedicalHistoryRecordsT { get; set; }
        public virtual DbSet<MedicalHistoryRecordV> MedicalHistoryRecordsV { get; set; }
        public virtual DbSet<PrintDocument> PrintDocuments { get; set; }
        public virtual DbSet<PatientNote> PatientNotes { get; set; }
        public virtual DbSet<PatientNoteStatus> PatientNoteStatuses { get; set; }
        public virtual DbSet<SchedulerRecordItem> SchedulerRecordItems { get; set; }
        public virtual DbSet<SchedulerRecord> SchedulerRecords { get; set; }
        public virtual DbSet<SupplierPaymentRefundT> SupplierPaymentRefundsT { get; set; }
        public virtual DbSet<SupplierPaymentT> SupplierPaymentsT { get; set; }
        public virtual DbSet<SupplierRefundT> SupplierRefundsT { get; set; }
        public virtual DbSet<SupplierPaymentV> SupplierPaymentsV { get; set; }
        public virtual DbSet<OrderPayment> OrderPayments { get; set; }
        public virtual DbSet<SupplierPaymentRefundV> SupplierPaymentRefundsV { get; set; }
        public virtual DbSet<SupplierRefundV> SupplierRefundsV { get; set; }
        public virtual DbSet<InsurancePatientCategory2InsuranceArticleV> InsurancePatientCategory2InsuranceArticleV { get; set; }
        public virtual DbSet<EmailSendAttachment> EmailSendAttachments { get; set; }
        public virtual DbSet<EmailSendRecipient> EmailSendRecipients { get; set; }
        public virtual DbSet<EmailSendT> EmailSendsT { get; set; }
        public virtual DbSet<EmailSendV> EmailSendsV { get; set; }
        public virtual DbSet<AppointmentClinicalNote> AppointmentClinicalNotes { get; set; }
        public virtual DbSet<InvoiceClaimDetail> InvoiceClaimDetails { get; set; }
        public virtual DbSet<InvoiceClaimDetail2InsurancePatientCategoryV> InvoiceClaimDetail2InsurancePatientCategoryV { get; set; }
        public virtual DbSet<InsuranceArticleV> InsuranceArticleV { get; set; }
        public virtual DbSet<InsurancePatientCategory2InvoiceClaimDetailV> InsurancePatientCategory2InvoiceClaimDetailV { get; set; }
        public virtual DbSet<PatientDocument> PatientDocuments { get; set; }
        public virtual DbSet<CHECKVIEW_InsuranceCoverages> CHECKVIEW_InsuranceCoverages { get; set; }
        public virtual DbSet<ChargeoutItem> ChargeoutItems { get; set; }
        public virtual DbSet<ChargeoutPaycharge> ChargeoutPaycharges { get; set; }
        public virtual DbSet<ChargeoutRefchargeT> ChargeoutRefchargesT { get; set; }
        public virtual DbSet<ChargeoutT> ChargeoutsT { get; set; }
        public virtual DbSet<ChargeoutStatus> ChargeoutStatuses { get; set; }
        public virtual DbSet<PaychargeRefchargeT> PaychargeRefchargesT { get; set; }
        public virtual DbSet<PaychargeT> PaychargesT { get; set; }
        public virtual DbSet<RefchargeT> RefchargesT { get; set; }
        public virtual DbSet<ChargeoutV> ChargeoutsV { get; set; }
        public virtual DbSet<EmailChargeAttachment> EmailChargeAttachments { get; set; }
        public virtual DbSet<EmailChargeRecipient> EmailChargeRecipients { get; set; }
        public virtual DbSet<EmailChargeT> EmailChargesT { get; set; }
        public virtual DbSet<PaychargeV> PaychargesV { get; set; }
        public virtual DbSet<RefchargeV> RefchargesV { get; set; }
        public virtual DbSet<ChargeoutRefchargeV> ChargeoutRefchargesV { get; set; }
        public virtual DbSet<ChargeoutPaychargeV> ChargeoutPaychargesV { get; set; }
        public virtual DbSet<ChargeoutRecipient> ChargeoutRecipients { get; set; }
        public virtual DbSet<EmailChargeV> EmailChargesV { get; set; }
        public virtual DbSet<PaychargeRefchargeV> PaychargeRefchargesV { get; set; }
        public virtual DbSet<AppointmentRemainder> AppointmentRemainders { get; set; }
        public virtual DbSet<AppointmentRemaindersForProcessed> AppointmentRemaindersForProcesseds { get; set; }
        public virtual DbSet<TreatmentPlanRecordT> TreatmentPlanRecordsT { get; set; }
        public virtual DbSet<TreatmentPlanRecordV> TreatmentPlanRecordsV { get; set; }
        public virtual DbSet<AppointmentTreatmentNote> AppointmentTreatmentNotes { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<PayrollInfoResult> sp_PayrollInfo(Nullable<System.DateTime> periodStart, Nullable<System.DateTime> periodFinish, Nullable<System.Guid> serviceProviderRowId)
        {
            var periodStartParameter = periodStart.HasValue ?
                new ObjectParameter("PeriodStart", periodStart) :
                new ObjectParameter("PeriodStart", typeof(System.DateTime));
    
            var periodFinishParameter = periodFinish.HasValue ?
                new ObjectParameter("PeriodFinish", periodFinish) :
                new ObjectParameter("PeriodFinish", typeof(System.DateTime));
    
            var serviceProviderRowIdParameter = serviceProviderRowId.HasValue ?
                new ObjectParameter("ServiceProviderRowId", serviceProviderRowId) :
                new ObjectParameter("ServiceProviderRowId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PayrollInfoResult>("sp_PayrollInfo", periodStartParameter, periodFinishParameter, serviceProviderRowIdParameter);
        }
    
        public virtual int sp_Inventory_Update(Nullable<System.Guid> orderRowId, Nullable<System.Guid> invoiceItemRowId)
        {
            var orderRowIdParameter = orderRowId.HasValue ?
                new ObjectParameter("OrderRowId", orderRowId) :
                new ObjectParameter("OrderRowId", typeof(System.Guid));
    
            var invoiceItemRowIdParameter = invoiceItemRowId.HasValue ?
                new ObjectParameter("InvoiceItemRowId", invoiceItemRowId) :
                new ObjectParameter("InvoiceItemRowId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inventory_Update", orderRowIdParameter, invoiceItemRowIdParameter);
        }
    }
}
