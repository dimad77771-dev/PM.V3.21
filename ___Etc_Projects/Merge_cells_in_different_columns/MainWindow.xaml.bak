<Window x:Class="CellMerging.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest;assembly=DevExpress.Xpf.Grid.v16.1"
        xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:local="clr-namespace:CellMerging"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:NegativeConverter x:Key="negConverter" />
        <local:MyTemplateSelector x:Key="cellTS" />

        <!--<Style TargetType="dxg:GridRow">
            <Setter Property="Panel.ZIndex" Value="{Binding RowHandle.Value, Converter={StaticResource negConverter}}" />
        </Style>
        <Style TargetType="dxg:RowIndicatorControl">
            <Setter Property="Panel.ZIndex" Value="1" />
        </Style>-->
        
        
        
        <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}">
            <local:MyStackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" Tag="sdlkfjsdlfkjsd" />
        </ControlTemplate>
        <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=HeadersTemplate}">
            <dx:MeasurePixelSnapper>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Panel.ZIndex="1">
                        <dxg:IndicatorColumnHeader x:Name="PART_Indicator" ColumnPosition="Left" Width="{Binding Path=(dxg:GridControl.CurrentView).IndicatorHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                           Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                               HasTopElement="{Binding Path=(dxg:GridControl.CurrentView).DataControl.BandsLayout.ShowBandsPanel, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:ColumnButtonTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </dxg:IndicatorColumnHeader>
                        <ContentControl Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=IndicatorColumnHeaderTemplate}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                    <dxg:ColumnHeaderPanel ClipToBounds="True" Grid.Column="1" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </dx:MeasurePixelSnapper>
        </DataTemplate>
        <Style TargetType="{x:Type dxg:GridScrollablePart}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dxg:GridScrollablePart}">
                        <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
                            <ContentPresenter Name="PART_FixedLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
                            <ContentPresenter x:Name="PART_FixedLeftLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed">
                                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxght:FixedLeftDivTableViewHitTestAcceptor />
                                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                            </ContentPresenter>
                            <Border Name="PART_FixedNoneCellsBorder" Clip="M 0,0 H 50000 V 50000 H 0" dx:DXDockPanel.Dock="Left">
                                <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                    True
                                </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                <ContentPresenter Name="PART_FixedNoneContent" />
                            </Border>
                            <ContentPresenter x:Name="PART_FixedRightLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed">
                                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxght:FixedRightDivTableViewHitTestAcceptor />
                                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                            </ContentPresenter>
                            <ContentPresenter Name="PART_FixedRightContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
                            <dxg:FitContentContainer>
                                <ContentPresenter Name="PART_FitContent" />
                            </dxg:FitContentContainer>
                        </dx:DXDockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CellDataTemplate">
            <Grid Background="White">
                <Border Name="editorBorder" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=RowData.SelectionState}" Value="Focused">
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
                                    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=RowData.SelectionState}" Value="None">
                                    <Setter Property="TextBlock.Foreground" Value="Black" />
                                    <Setter Property="Background" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsFocusedCell}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}" />
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <dxe:TextEdit Name="PART_Editor" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <dxg:GridControl AutoPopulateColumns="True" Name="gridControl1" SelectionMode="Row">
            <dxg:GridControl.Columns>
                <dxg:GridColumn ColumnFilterMode="DisplayText" FieldName="ID1" CellTemplateSelector="{StaticResource cellTS}" CellTemplate="{StaticResource CellDataTemplate}" />
                <dxg:GridColumn ColumnFilterMode="DisplayText" FieldName="ID2" CellTemplateSelector="{StaticResource cellTS}" CellTemplate="{StaticResource CellDataTemplate}" />
                <dxg:GridColumn FieldName="Name" AllowEditing="False" />
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView Name="tableView1" ShowHorizontalLines="True" AutoWidth="False" ShowTotalSummary="True" EditorShowMode="MouseUpFocused" 
                               NavigationStyle="Row" AllowHorizontalScrollingVirtualization="True"
                               UseLightweightTemplates="None">
                    <dxg:TableView.CellStyle>
                        <Style TargetType="dxg:GridCellContentPresenter" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}">
                            <Setter Property="Panel.ZIndex" Value="{Binding Column.VisibleIndex, Converter={StaticResource negConverter}}" />
                        </Style>
                    </dxg:TableView.CellStyle>
                </dxg:TableView>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
