<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid"
                    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes">
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <dx:BoolToObjectConverter x:Key="ExpandButtonMarginConverter">
    <dx:BoolToObjectConverter.TrueValue>
      <Thickness>0,3,3,4</Thickness>
    </dx:BoolToObjectConverter.TrueValue>
    <dx:BoolToObjectConverter.FalseValue>
      <Thickness>3,3,3,4</Thickness>
    </dx:BoolToObjectConverter.FalseValue>
  </dx:BoolToObjectConverter>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}"
                   TargetType="{x:Type dx:ToggleStateButton}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="Timeline1">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Path"
                                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF83A2E0"/>
        </ColorAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="Timeline2">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Path"
                                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF4D6EAF"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Path"
                                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF7D99D0"/>
        </ColorAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid Name="grid" Background="Transparent">
      <Path x:Name="Path_Copy" Stretch="Fill"
            Data="F1 M 372,517.5 C 372,513.358 368.642,510 364.5,510 360.358,510 357,513.358 357,517.5 357,521.642 360.358,525 364.5,525 368.642,525 372,521.642 372,517.5 M 364,521 L 361,515 368,515 365,521 364,521 Z"
            HorizontalAlignment="Center" Margin="0,2,0,0" VerticalAlignment="Center" Width="15" Height="15"
            Fill="#FFFFFFFF"/>
      <Path x:Name="Path" Stretch="Fill"
            Data="F1 M 372,517.5 C 372,513.358 368.642,510 364.5,510 360.358,510 357,513.358 357,517.5 357,521.642 360.358,525 364.5,525 368.642,525 372,521.642 372,517.5 M 364,521 L 361,515 368,515 365,521 364,521 Z"
            HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="15" Height="15">
        <Shape.Fill>
          <LinearGradientBrush EndPoint="0.146,0.146" StartPoint="0.854,0.854">
            <GradientStop Color="#FF4D6EAF" Offset="0"/>
            <GradientStop Color="#FF7D99D0" Offset="1"/>
          </LinearGradientBrush>
        </Shape.Fill>
      </Path>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="Path" Property="Shape.Fill">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.146,0.146" StartPoint="0.854,0.854">
              <GradientStop Color="#FF4D6EAF" Offset="0"/>
              <GradientStop Color="#FF45639D" Offset="1"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="False">
        <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="-90"/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Border x:Name="shadow" Width="Auto" Height="Auto" CornerRadius="4,4,4,4" Background="#5A5873A1"
              Padding="2,2,2,2" Margin="8,8,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Opacity="1"/>
      <Border x:Name="border1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="4,4,4,4"
              dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}"
              dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"/>
      <Border x:Name="border" Margin="4,4,4,4" Width="Auto" Height="Auto" Padding="1,1,1,1"
              CornerRadius="3,3,3,3" Grid.RowSpan="1">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
            <GradientStop Color="#FF5272B1" Offset="0"/>
            <GradientStop Color="#FF7390CA" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
        <Border x:Name="border2" Width="Auto" Height="Auto" Padding="1,1,1,1" CornerRadius="2,2,2,2">
          <Border.Background>
            <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
              <GradientStop Color="#FFCBE2FF" Offset="0"/>
              <GradientStop Color="#FFFFFFFF" Offset="1"/>
              <GradientStop Color="#FFDFEDFF" Offset="0.913"/>
            </LinearGradientBrush>
          </Border.Background>
          <Border x:Name="group_row_bg_panel_top" Width="Auto" Height="Auto" CornerRadius="2">
            <FrameworkElement.Style>
              <Style>
                <Setter Property="Control.Background">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                      <GradientStop Color="#FFCBE2FF" Offset="0"/>
                      <GradientStop Color="#FFDDECFF" Offset="1"/>
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="UIElement.IsMouseOver" Value="true"/>
                      <Condition Property="dxgcore:DataViewBase.IsFocusedRow" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Control.Background">
                      <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                          <GradientStop Color="#FFE2EFFF" Offset="0"/>
                          <GradientStop Color="#FFDDECFF" Offset="1"/>
                        </LinearGradientBrush>
                      </Setter.Value>
                    </Setter>
                  </MultiTrigger>
                  <Trigger Property="dxgcore:DataViewBase.IsFocusedRow" Value="true">
                    <Setter Property="Control.Background">
                      <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                          <GradientStop Color="#FFCBE2FF" Offset="0"/>
                          <GradientStop Color="#FFDDECFF" Offset="1"/>
                        </LinearGradientBrush>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
            <ContentPresenter/>
          </Border>
        </Border>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="dxgcore:DataViewBase.IsFocusedRow" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border2" Property="Border.Background">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
              <GradientStop Color="#FFE8F2FF" Offset="0"/>
              <GradientStop Color="#FFFFFFFF" Offset="1"/>
              <GradientStop Color="#FFDFEDFF" Offset="0.913"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </MultiTrigger>
      <DataTrigger Value="Focused"
                   Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}">
        <Setter TargetName="border1" Property="Border.Background">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
              <GradientStop Color="#FF5B7DAF" Offset="0"/>
              <GradientStop Color="#FF7C9BC8" Offset="1"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Value="Selected"
                   Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}">
        <Setter TargetName="border1" Property="Border.Background">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
              <GradientStop Color="#FFA7C4ED" Offset="0"/>
              <GradientStop Color="#FF9FB9E2" Offset="1"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxgcore:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                     Value="True"/>
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithinView, RelativeSource={RelativeSource TemplatedParent}}"
                     Value="False"/>
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).ActualFadeSelectionOnLostFocus, RelativeSource={RelativeSource TemplatedParent}}"
                     Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="shadow" Property="UIElement.Opacity" Value="0"/>
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}"
         TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="TextBlock.FontSize" Value="15"/>
    <Setter Property="FrameworkElement.Margin"
            Value="{Binding Path=(dxg:GridControl.ActiveView).ShowCardExpandButton, Converter={StaticResource ExpandButtonMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="TextBlock.Foreground" Value="#FF5E83BA"/>
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}"
         TargetType="{x:Type dxg:GridCardExpandButton}">
    <Setter Property="FrameworkElement.Width" Value="27"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}"
         TargetType="{x:Type dxg:GridCardContentPresenter}">
    <Setter Property="FrameworkElement.Margin" Value="11,4,11,8"/>
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}"
                   TargetType="{x:Type ContentControl}">
    <ContentPresenter/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}"
                   TargetType="{x:Type ContentControl}">
    <ContentPresenter/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}"
                   TargetType="{x:Type ContentControl}">
    <ContentPresenter/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}"
                   TargetType="{x:Type ContentControl}">
    <ContentPresenter/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
    <ContentControl x:Name="card" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}"
                    Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
      <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
        <dxg:GridCardPanel.Header>
          <dxg:GridCardHeaderControl>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <ContentControl Grid.Column="1"
                              Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
              </ContentControl>
              <ContentControl Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}"
                              Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
              </ContentControl>
            </Grid>
          </dxg:GridCardHeaderControl>
        </dxg:GridCardPanel.Header>
        <dxg:GridCardPanel.Body>
          <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
            <dxg:GridCardContentPresenter x:Name="presenter"
                                          Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}"/>
          </ContentControl>
        </dxg:GridCardPanel.Body>
      </dxg:GridCardPanel>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Value="Vertical" Binding="{Binding Path=View.CollapsedCardOrientation}">
        <Setter TargetName="gridCardPanel" Property="dxg:GridCardPanel.RotateOnCollapse" Value="true"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>