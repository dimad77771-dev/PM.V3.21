<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid"
                    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="{dx:GridResource themes/DeepBlue/Constants.xaml}"/>
  </ResourceDictionary.MergedDictionaries>
  <dxg:DetailLevelToObjectConverter x:Key="DetailLevelToWidthConverter" DetailValue="1" NotDetailValue="0"/>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlContainerTemplate}"
                   TargetType="{x:Type ContentControl}">
    <Grid>
      <Border BorderThickness="0,0,0,1" BorderBrush="#FFCBE2FF">
        <ContentPresenter/>
      </Border>
      <Border BorderThickness="0,0,0,1"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}"
              Margin="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowOffsetThickness}}"/>
      <Border BorderThickness="0,0,0,1"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}"
              Visibility="{Binding Path=CollapseBottomLine, Converter={dx:BoolToVisibilityInverseConverter}}"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}"
                   TargetType="{x:Type ContentControl}">
    <Border x:Name="ContentBorder"
            BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}">
      <TextBlock.Foreground>
        <SolidColorBrush Color="#FF476797"/>
      </TextBlock.Foreground>
      <ContentPresenter/>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowPresenterStyle}"
         TargetType="{x:Type dxg:GroupGridRowPresenter}"/>
  <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlContainerTemplate}"
                   TargetType="{x:Type ContentControl}">
    <Border SnapsToDevicePixels="true">
      <ContentPresenter/>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}"
                   TargetType="{x:Type ContentControl}">
    <Grid x:Name="gridContent">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <Border x:Name="ContentBorder" Grid.Row="1" BorderThickness="0,0,0,0"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}">
        <ContentPresenter/>
      </Border>
      <Border x:Name="ContentBorderTop" Grid.Row="0" DockPanel.Dock="Top" TextBlock.Foreground="#FF476797"
              BorderThickness="0,1,0,0"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}"/>
      <Border x:Name="groupBorderMargin" Grid.RowSpan="2" BorderThickness="0,0,0,1"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}"
              Margin="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowOffsetThickness}}"
              Visibility="{Binding Path=IsRowExpanded, Converter={dx:BoolToVisibilityConverter}}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Value="false" Binding="{Binding Path=CollapseBottomLine}">
        <Setter TargetName="groupBorderMargin" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
      </DataTrigger>
      <DataTrigger Value="true" Binding="{Binding Path=IsRowExpanded}">
        <Setter TargetName="ContentBorder" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
      </DataTrigger>
      <DataTrigger Value="Top" Binding="{Binding Path=RowPosition}">
        <Setter TargetName="ContentBorderTop" Property="Border.BorderThickness" Value="0,0,0,0"/>
      </DataTrigger>
      <DataTrigger Value="Single" Binding="{Binding Path=RowPosition}">
        <Setter TargetName="ContentBorderTop" Property="Border.BorderThickness" Value="0,0,0,0"/>
      </DataTrigger>
      <DataTrigger Value="True" Binding="{Binding Path=IsLastHierarchicalRow}">
        <Setter TargetName="ContentBorder" Property="Border.BorderThickness" Value="0,0,0,1"/>
      </DataTrigger>
      <DataTrigger Value="false" Binding="{Binding Path=IsRowVisible}">
        <Setter TargetName="gridContent" Property="UIElement.Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger Value="Horizontal"
                   Binding="{Binding Path=(dxg:GridControl.ActiveView).Orientation, RelativeSource={RelativeSource TemplatedParent}}">
        <Setter TargetName="gridContent" Property="FrameworkElement.LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="-90"/>
          </Setter.Value>
        </Setter>
        <Setter TargetName="ContentBorder" Property="DockPanel.Dock" Value="Left"/>
        <Setter TargetName="ContentBorder" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlContainerTemplate}"
                   TargetType="{x:Type ContentControl}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Border x:Name="RowContentBorder"
              dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"
              dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
              Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Border x:Name="RowBottomLine" BorderBrush="{TemplateBinding Control.BorderBrush}"
              Padding="{TemplateBinding Control.Padding}" Grid.Row="1"
              BorderThickness="{Binding Path=View.ShowHorizontalLines, Converter={dx:BoolToObjectConverter TrueValue='0,0,0,1', FalseValue=0}}"/>
      <Border x:Name="BottomRowBorder" Grid.Row="1"
              BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}"/>
      <ContentPresenter Grid.RowSpan="2"/>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Value="True" Binding="{Binding Path=ShowBottomLine}">
        <Setter TargetName="BottomRowBorder" Property="Border.BorderThickness" Value="0,0,0,1"/>
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError), RelativeSource={RelativeSource TemplatedParent}}"
                     Value="True"/>
          <Condition Binding="{Binding Path=(dxgcore:RowData.CurrentRowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="RowContentBorder"
                Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=ValidationErrorBrush}}"
                Property="Border.Background"/>
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type dxg:FixedGroupsAdorner}">
    <Setter Property="dxg:FixedGroupsAdorner.DrawAdornerUnderWholeGroup" Value="false"/>
    <Setter Property="dxg:FixedGroupsAdorner.AdornerHeight" Value="20"/>
    <Setter Property="dxg:FixedGroupsAdorner.AdornerBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#14000000" Offset="0.35"/>
          <GradientStop Color="#00000000" Offset="1"/>
          <GradientStop Color="#33000000"/>
          <GradientStop Color="#1E000000" Offset="0.15"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <ContentPresenter IsHitTestVisible="false"
                            Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:RowIndicatorControl}">
    <Setter Property="Control.Foreground"
            Value="{StaticResource {dxgt:RowIndicatorThemeKey ResourceKey=ForegroundBrush}}"/>
  </Style>
  <Style x:Key="{dxgt:GridRowThemeKey ResourceKey=DetailTotalSummaryIndentBorderStyle}"
         TargetType="{x:Type Border}">
    <Setter Property="Border.BorderBrush" Value="#FF8AA8CE"/>
    <Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
  </Style>
  <Style TargetType="{x:Type dxg:GridDetailExpandButtonContainer}">
    <Setter Property="dxg:GridDetailExpandButtonContainer.IsMasterRowExpanded"
            Value="{Binding IsMasterRowExpanded}"/>
    <Setter Property="dxg:GridDetailExpandButtonContainer.RowPosition" Value="{Binding RowPosition}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridDetailExpandButtonContainer}">
          <dxg:GridDetailExpandButton Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeMasterRowExpanded}"
                                      CommandParameter="{Binding Path=RowHandle.Value}"
                                      IsChecked="{Binding Path=IsRowExpanded, Mode=OneWay}"
                                      dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:DetailRowsIndentControl}">
    <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel"
            Value="{Binding Path=(dxg:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <dxg:BackgroundBorderControl Width="{Binding Path=Width}" ItemLevel="{Binding Path=Level}"
                                         RowLevel="{Binding Path=(dx:DataObjectBase.DataObject).DetailLevel, RelativeSource={RelativeSource TemplatedParent}}"
                                         LineLevel="{Binding Path=(dx:DataObjectBase.DataObject).LineLevel, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsMasterRowExpanded="{Binding Path=(dx:DataObjectBase.DataObject).IsMasterRowExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="detailLeftLine" BorderThickness="1,0,0,0" HorizontalAlignment="Right"
                    dxg:DetailRowsIndentControl.IsSummaryDetailLevel="{Binding Path=(dxg:DetailRowsIndentControl.IsSummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}"
                    Width="{Binding Level, Converter={StaticResource DetailLevelToWidthConverter}}"
                    BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:DetailRowsIndentRightControl}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <dxg:BackgroundBorderControl Width="{Binding Path=WidthRight}"/>
            <Border x:Name="detailLeftLine" BorderThickness="1,0,0,0" HorizontalAlignment="Left"
                    Width="{Binding Level, Converter={StaticResource DetailLevelToWidthConverter}}"
                    BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>