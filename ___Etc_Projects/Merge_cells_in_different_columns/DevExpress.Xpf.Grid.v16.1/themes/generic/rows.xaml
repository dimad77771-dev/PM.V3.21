<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid"
                    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes"
                    xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest">
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <dxg:DetailMarginVisibilityConverter x:Key="DetailMarginLeftVisibilityConverter" MarginSide="Left"/>
  <dxg:DetailMarginVisibilityConverter x:Key="DetailMarginRightVisibilityConverter" MarginSide="Right"/>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneHeadersPanelTemplate}">
    <dx:StackVisibleIndexPanel Name="headersPanel" dxgcore:ColumnBase.HeaderPresenterType="Headers"
                               ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal">
      <dx:DragManager.DropTargetFactory>
        <dxgcore:FixedNoneColumnHeaderDropTargetFactory/>
      </dx:DragManager.DropTargetFactory>
    </dx:StackVisibleIndexPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}">
    <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal"/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftHeadersPanelTemplate}">
    <dx:StackVisibleIndexPanel Name="fixedLeftHeadersPanel" dxgcore:ColumnBase.HeaderPresenterType="Headers"
                               ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal">
      <dx:DragManager.DropTargetFactory>
        <dxgcore:FixedLeftColumnHeaderDropTargetFactory/>
      </dx:DragManager.DropTargetFactory>
    </dx:StackVisibleIndexPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}">
    <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal"/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightHeadersPanelTemplate}">
    <dx:StackVisibleIndexPanel Name="fixedRightHeadersPanel" dxgcore:ColumnBase.HeaderPresenterType="Headers"
                               ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal">
      <dx:DragManager.DropTargetFactory>
        <dxgcore:FixedRightColumnHeaderDropTargetFactory/>
      </dx:DragManager.DropTargetFactory>
    </dx:StackVisibleIndexPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}">
    <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="true" Orientation="Horizontal"/>
  </ControlTemplate>
  <dxgcore:DefaultControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}"
                                  TargetType="{x:Type ContentControl}">
    <ContentPresenter/>
  </dxgcore:DefaultControlTemplate>
  <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowToolTipTemplate}">
    <dx:DXDockPanel LastChildFill="true">
      <dxe:ErrorControl Content="{Binding}"/>
      <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ErrorContent}"/>
    </dx:DXDockPanel>
  </DataTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlTemplate}">
    <ContentControl Template="{Binding Path=View.RowDecorationTemplate}">
      <dxg:GridRowContent x:Name="PART_DataRow" Style="{Binding Path=View.RowStyle}"
                          MinHeight="{Binding Path=View.RowMinHeight}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <dx:DXDockPanel>
            <dxg:RowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth}"
                                     Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ItemTemplate}}"
                                     Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <dxg:DetailRowsIndentControl ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                         Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginLeftVisibilityConverter}}"/>
            <ContentPresenter x:Name="PART_RowOffsetPresenter"/>
            <dxg:GridDetailExpandButtonContainer dx:FrameworkElementHelper.IsVisible="{Binding View.ActualShowDetailButtons}"/>
            <dx:DataContentPresenter x:Name="PART_DataRowContent" Margin="0,0,0,1" Content="{Binding}"
                                     ContentTemplateSelector="{Binding Path=View.ActualDataRowTemplateSelector}"
                                     ToolTipService.ToolTip="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError), RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BoolToObjectConverter FalseValue={x:Null}, TrueValue={ToolTip Name=toolTip, Content={Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.ValidationError), RelativeSource={RelativeSource TemplatedParent}}, ContentTemplate={DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowToolTipTemplate}}}}}"/>
          </dx:DXDockPanel>
          <dxg:DetailRowsIndentRightControl Grid.Column="1"
                                            ItemsSourceToReverse="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                            Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginRightVisibilityConverter}}"/>
        </Grid>
      </dxg:GridRowContent>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Value="false" Binding="{Binding Path=View.ShowHorizontalLines}">
        <Setter TargetName="PART_DataRowContent" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
      </DataTrigger>
      <DataTrigger Value="true" Binding="{Binding Path=ShowBottomLine}">
        <Setter TargetName="PART_DataRowContent" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <dxg:DefaultStyle x:Key="{dxgt:GridRowThemeKey ResourceKey=RowStyle}" TargetType="{x:Type dxg:GridRowContent}">
    <Setter Property="Control.Background"
            Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}"/>
    <Style.Triggers>
      <DataTrigger Value="True" Binding="{Binding Path=AlternateRow}">
        <Setter Property="Control.Background" Value="{Binding Path=View.ActualAlternateRowBackground}"/>
      </DataTrigger>
      <DataTrigger Value="Selected" Binding="{Binding Path=SelectionState}">
        <Setter Property="Control.Background"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
        <Setter Property="TextBlock.Foreground"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}"/>
      </DataTrigger>
      <DataTrigger Value="Focused" Binding="{Binding Path=SelectionState}">
        <Setter Property="TextBlock.Foreground"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
        <Setter Property="Control.Background"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
      </DataTrigger>
    </Style.Triggers>
  </dxg:DefaultStyle>
  <Style TargetType="{x:Type dxg:FixedDelimiter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <ContentPresenter ContentTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:RowsDelimiter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:FitRowContentPresenter}">
    <Setter Property="Control.Template"
            Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}}"/>
  </Style>
  <Style TargetType="{x:Type dxg:FitRowLeftContentPresenter}">
    <Setter Property="Control.Template"
            Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}}"/>
  </Style>
  <dxgcore:DefaultDataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}">
    <dxg:BandedViewContentSelector HorizontalContentAlignment="Stretch" BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
      <dxg:BandedViewContentSelector.TableViewContent>
        <ControlTemplate>
          <dxg:GridScrollablePart x:Name="ScrollablePart"
                                  FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"
                                  ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}"
                                  FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                  dxgcore:DataControlBase.CurrentView="{Binding Path=View}"
                                  FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                  FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                  FixedLineWidth="{Binding Path=View.FixedLineWidth}">
            <dxg:GridScrollablePart.FitContent>
              <dxg:FitRowContentPresenter VerticalContentAlignment="Stretch" dxgcore:DataControlPopupMenu.GridMenuType="RowCell"
                                          Content="{Binding}" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"/>
            </dxg:GridScrollablePart.FitContent>
            <dxg:GridScrollablePart.FixedLeftContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}"
                                    ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}}"/>
            </dxg:GridScrollablePart.FixedLeftContent>
            <dxg:GridScrollablePart.FixedRightContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}"
                                    ItemsSource="{Binding Path=FixedRightCellData}"
                                    ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}}"/>
            </dxg:GridScrollablePart.FixedRightContent>
            <dxg:GridScrollablePart.FixedNoneContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}"
                                    ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}}"/>
            </dxg:GridScrollablePart.FixedNoneContent>
          </dxg:GridScrollablePart>
        </ControlTemplate>
      </dxg:BandedViewContentSelector.TableViewContent>
      <dxg:BandedViewContentSelector.BandedViewContent>
        <ControlTemplate>
          <dxg:GridScrollablePart x:Name="ScrollablePart"
                                  FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"
                                  ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}"
                                  FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                  dxgcore:DataControlBase.CurrentView="{Binding Path=View}"
                                  FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                  FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                  FixedLineWidth="{Binding Path=View.FixedLineWidth}">
            <dxg:GridScrollablePart.FitContent>
              <dxg:FitRowContentPresenter VerticalContentAlignment="Stretch" dxgcore:DataControlPopupMenu.GridMenuType="RowCell"
                                          Content="{Binding}" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"/>
            </dxg:GridScrollablePart.FitContent>
            <dxg:GridScrollablePart.FixedLeftContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}">
                <dx:ItemsControlBase.ItemsPanel>
                  <ControlTemplate>
                    <dxg:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"/>
                  </ControlTemplate>
                </dx:ItemsControlBase.ItemsPanel>
              </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedLeftContent>
            <dxg:GridScrollablePart.FixedRightContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}"
                                    ItemsSource="{Binding Path=FixedRightCellData}">
                <dx:ItemsControlBase.ItemsPanel>
                  <ControlTemplate>
                    <dxg:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"/>
                  </ControlTemplate>
                </dx:ItemsControlBase.ItemsPanel>
              </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedRightContent>
            <dxg:GridScrollablePart.FixedNoneContent>
              <dxg:CellItemsControl dxgcore:DataControlBase.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}">
                <dx:ItemsControlBase.ItemsPanel>
                  <ControlTemplate>
                    <dxg:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}"
                                         FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"/>
                  </ControlTemplate>
                </dx:ItemsControlBase.ItemsPanel>
              </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedNoneContent>
          </dxg:GridScrollablePart>
        </ControlTemplate>
      </dxg:BandedViewContentSelector.BandedViewContent>
    </dxg:BandedViewContentSelector>
  </dxgcore:DefaultDataTemplate>
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlTemplate}">
    <Grid x:Name="group"
          Visibility="{Binding IsRowVisible, Converter={StaticResource BoolToVisibilityConverter}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <dxg:RowIndicatorControl Grid.Column="0"
                               Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=GroupPresenterTemplate}}"
                               Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Width="{Binding Path=View.ActualIndicatorWidth}"/>
      <dxg:DetailRowsIndentControl Grid.Column="1"
                                   ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                   Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginLeftVisibilityConverter}}"/>
      <dxg:GroupRowOffsetPresenter Grid.Column="2"/>
      <ContentControl Grid.Column="3"
                      Template="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlContainerTemplate}}">
        <ContentControl Template="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}}">
          <dx:DoubleClicker HorizontalContentAlignment="Stretch" CommandParameter="{Binding RowHandle.Value}"
                            Command="{Binding View.Commands.ChangeGroupExpanded}">
            <dxg:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter"
                                       ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}" Content="{Binding}"
                                       Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowPresenterStyle}}"/>
          </dx:DoubleClicker>
        </ContentControl>
      </ContentControl>
      <dxg:DetailRowsIndentRightControl Grid.Column="4"
                                        ItemsSourceToReverse="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                        Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginRightVisibilityConverter}}"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowControlTemplate}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <dxg:RowIndicatorControl Grid.Column="0"
                               Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AdditionalTemplate}}"
                               Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Width="{Binding Path=View.ActualIndicatorWidth}"/>
      <dxg:DetailRowsIndentControl Grid.Column="1"
                                   ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                   Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginLeftVisibilityConverter}}"/>
      <dxg:GroupRowOffsetPresenter Grid.Column="2"/>
      <dx:DataContentPresenter x:Name="PART_GroupFooterContentPresenter" Grid.Column="3"
                               Style="{Binding Path=View.GroupFooterRowStyle}" Content="{Binding}"
                               ContentTemplateSelector="{Binding Path=View.ActualGroupFooterRowTemplateSelector}"/>
      <dxg:DetailRowsIndentRightControl Grid.Column="4"
                                        ItemsSourceToReverse="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"
                                        Visibility="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents, Converter={StaticResource DetailMarginRightVisibilityConverter}}"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlTemplate}">
    <ContentControl Template="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=GroupRowControlContainerTemplate}}">
      <ContentControl x:Name="headerContainer" DockPanel.Dock="Top"
                      Template="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}}">
        <dx:DoubleClicker Command="{x:Static dxg:GridCommands.ChangeGroupExpanded}"
                          CommandParameter="{Binding RowHandle.Value}">
          <dxg:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter"
                                     ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}" Content="{Binding}"/>
        </dx:DoubleClicker>
      </ContentControl>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Value="Horizontal"
                   Binding="{Binding Path=(dxg:GridControl.ActiveView).Orientation, RelativeSource={RelativeSource Self}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Setter TargetName="headerContainer" Property="DockPanel.Dock" Value="Left"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <dxg:DefaultStyle x:Key="{dxgt:GridRowThemeKey ResourceKey=CellStyle}"
                    TargetType="{x:Type dxgcore:CellContentPresenter}">
    <Setter Property="Control.Background"
            Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
    <Style.Triggers>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Selected">
        <Setter Property="Control.Background"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
        <Setter Property="TextBlock.Foreground"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}"/>
      </Trigger>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Focused">
        <Setter Property="Control.Background"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
        <Setter Property="TextBlock.Foreground"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}"/>
      </Trigger>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="FocusedAndSelected">
        <Setter Property="Control.Background"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
        <Setter Property="TextBlock.Foreground"
                Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
      </Trigger>
    </Style.Triggers>
  </dxg:DefaultStyle>
  <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=GroupPanelCaptionTemplate}"
                   TargetType="{x:Type dxg:GroupPanelCaptionControl}">
    <ContentPresenter/>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=DetailHeaderControlTemplate}"
                   TargetType="{x:Type dxg:DetailHeaderControl}">
    <dxg:DetailRowsContentControl View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}"
                                  DetailDescriptor="{Binding Path=DetailDescriptor, RelativeSource={RelativeSource TemplatedParent}}">
      <dxg:DetailDescriptorContentBorder>
        <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding dxgcore:DetailRowControlBase.MasterRowData}"
                                           Content="{Binding DetailDescriptor.HeaderContent, RelativeSource={RelativeSource TemplatedParent}}"
                                           ContentTemplate="{Binding DetailDescriptor.HeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
      </dxg:DetailDescriptorContentBorder>
    </dxg:DetailRowsContentControl>
  </ControlTemplate>
</ResourceDictionary>