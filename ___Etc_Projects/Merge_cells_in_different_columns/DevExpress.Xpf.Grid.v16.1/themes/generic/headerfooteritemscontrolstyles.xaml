<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid"
                    xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes">
  <dxg:SummaryToTextConverter x:Key="SummaryToTextConverter"/>
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="true"/>
  <Style x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}"
         TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
    <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="true"/>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxei:TextBlockService.IsTextTrimmed), RelativeSource={RelativeSource Self}}"
                   Value="True">
        <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxgt:GridControlThemeKey ResourceKey=GroupPanelStyle}" TargetType="{x:Type dx:DXDockPanel}">
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxg:GroupPanelColumnHeaderDropTargetFactory/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=SearchPanelContentTemplate}"
         TargetType="{x:Type ContentControl}">
    <Setter Property="dx:FocusHelper2.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelBackground}}">
            <dxg:GridSearchControl x:Name="PART_SearchControl" IsEditorTabStop="false" IsTabStop="false"
                                   View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="{Binding Path=(dxg:GridControl.CurrentView).SearchPanelHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                   SearchTextBoxMinWidth="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelTextBoxMinWidth}}"
                                   Visibility="{Binding Path=View.ActualShowSearchPanel, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}"
                                   Margin="{Binding Path=GroupPanelShown, ElementName=PART_SearchControl, Converter={dx:BoolToObjectConverter TrueValue={DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWithGroupedPanelMargin}}, FalseValue={DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWithoutGroupedPanelMargin}}}}"/>
            <Border x:Name="PART_SearchPanelBorderBottom" BorderThickness="0,0,0,1"
                    BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelBorderBottomBrush}}"
                    Visibility="{Binding Path=GroupPanelShown, ElementName=PART_SearchControl, Converter={dx:BoolToVisibilityInverseConverter}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:FixedTotalSummaryControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:FixedTotalSummaryControl}">
          <ContentPresenter x:Name="PART_Presenter"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedSummaryTextBlockStyle}"
         TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
    <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="true"/>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxei:TextBlockService.IsTextTrimmed), RelativeSource={RelativeSource Self}}"
                   Value="True">
        <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type dxg:FixedTotalSummaryItemsTextBlock}">
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxght:FixedTotalSummaryTableViewHitTestAcceptor/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:FixedTotalSummaryItemsTextBlock}">
          <TextBlock dxgcore:InlineTextService.InlineInfo="{Binding SummaryTextInfo, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedSummaryTextBlockStyle}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:FixedTotalSummaryContainerControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:FixedTotalSummaryContainerControl}">
          <Grid>
            <Border Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedSummaryFillBrush}}"
                    BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TotalSummaryBorderBrush}}"
                    BorderThickness="{Binding Path=View.IsRootView, Converter={dx:BoolToObjectConverter FalseValue='0,0,0,1', TrueValue='0,1,0,0'}}"/>
            <dxg:FixedTotalSummaryControl x:Name="PART_FixedTotalSummary" MinHeight="29"
                                          Foreground="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TotalSummaryBrush}}"
                                          Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=TotalSummaryPanelMargin}}">
              <dx:DXDockPanel LastChildFill="true" Background="Transparent">
                <dxg:FixedTotalSummaryItemsTextBlock x:Name="PART_FixedTotalSummaryLeftPart" DockPanel.Dock="Left" HorizontalAlignment="Left" Margin="6"
                                                     TotalSummariesSource="{Binding Path=(dxg:GridControl.CurrentView).FixedSummariesLeft, RelativeSource={RelativeSource TemplatedParent}}"
                                                     FixedTotalSummaryElementStyle="{Binding Path=(dxg:GridControl.CurrentView).FixedTotalSummaryElementStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                <dxg:FixedTotalSummaryItemsTextBlock x:Name="PART_FixedTotalSummaryRightPart" DockPanel.Dock="Right" HorizontalAlignment="Right"
                                                     Margin="6"
                                                     TotalSummariesSource="{Binding Path=(dxg:GridControl.CurrentView).FixedSummariesRight, RelativeSource={RelativeSource TemplatedParent}}"
                                                     FixedTotalSummaryElementStyle="{Binding Path=(dxg:GridControl.CurrentView).FixedTotalSummaryElementStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
              </dx:DXDockPanel>
            </dxg:FixedTotalSummaryControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupItemsControlStyle}"
         TargetType="{x:Type dx:CachedItemsControl}">
    <Setter Property="UIElement.ClipToBounds" Value="true"/>
    <Setter Property="dxgcore:ColumnBase.HeaderPresenterType" Value="GroupPanel"/>
    <Setter Property="dx:ItemsControlBase.ItemsPanel">
      <Setter.Value>
        <ControlTemplate>
          <dx:DXDockPanel Name="groupHeadersPanel" dxgcore:BaseGridColumnHeader.CorrectDragIndicatorLocation="false"
                          dxgcore:ColumnBase.HeaderPresenterType="GroupPanel" Background="Transparent" LastChildFill="false"
                          Style="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=GroupPanelStyle}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dx:ItemsControlBase.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxg:GridColumnHeader dxgcore:ColumnBase.HeaderPresenterType="GroupPanel" ColumnPosition="Standalone"
                                dxgcore:DataControlPopupMenu.GridMenuType="Column"
                                DataContext="{Binding Content.Column, RelativeSource={RelativeSource TemplatedParent}}"
                                GridColumn="{Binding}" dxgcore:BaseColumn.VisibleIndex="{Binding Path=(dxg:GridColumn.GroupIndex)}"
                                dxb:BarManager.DXContextMenu="{Binding Path=View.GridMenu}"
                                Command="{Binding Path=Commands.ChangeColumnSortOrder}">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
              <dxght:GroupPanelColumnHeaderTableViewHitTestAcceptor/>
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
          </dxg:GridColumnHeader>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxg:GroupPanelColumnItemsControl}"
         BasedOn="{StaticResource {dxgt:GroupRowThemeKey ResourceKey=GroupItemsControlStyle}}">
    <Setter Property="FrameworkElement.MinHeight" Value="21"/>
  </Style>
  <Style x:Key="{dxgt:CardViewThemeKey ResourceKey=TotalSummaryItemsControlStyle}"
         TargetType="{x:Type ItemsControl}">
    <Setter Property="UIElement.ClipToBounds" Value="true"/>
    <Setter Property="ItemsControl.ItemsSource"
            Value="{Binding Path=(dxg:GridControl.ActiveView).HeadersData.CellData, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxg:GridTotalSummary x:Name="summary">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
              <dxght:TotalSummaryTableViewHitTestAcceptor/>
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
          </dxg:GridTotalSummary>
          <DataTemplate.Triggers>
            <DataTrigger Value="false" Binding="{Binding Path=Column.HasTotalSummaries}">
              <Setter TargetName="summary" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
          </DataTemplate.Triggers>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:CardViewThemeKey ResourceKey=CardHeaderPanelStyle}"
         TargetType="{x:Type dx:StackVisibleIndexPanel}">
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgcore:ColumnHeaderDropTargetFactory/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:CardViewThemeKey ResourceKey=HeaderItemsControlStyle}"
         TargetType="{x:Type ItemsControl}">
    <Setter Property="UIElement.ClipToBounds" Value="true"/>
    <Setter Property="dxgcore:ColumnBase.HeaderPresenterType" Value="Headers"/>
    <Setter Property="ItemsControl.ItemsSource"
            Value="{Binding Path=(dxg:GridControl.ActiveView).VisibleColumns, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <dx:StackVisibleIndexPanel dxgcore:ColumnBase.HeaderPresenterType="Headers" MinHeight="3" Background="Transparent"
                                     Orientation="Vertical" dxgcore:BaseGridHeader.DropPlaceOrientation="Vertical"
                                     Style="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=CardHeaderPanelStyle}}"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxg:GridColumnHeader dxgcore:ColumnBase.HeaderPresenterType="Headers" ColumnPosition="Standalone"
                                DropPlaceOrientation="Vertical" Margin="0,0,0,1" HorizontalAlignment="Stretch"
                                dxgcore:DataControlPopupMenu.GridMenuType="Column" GridColumn="{Binding}"
                                dxgcore:BaseColumn.VisibleIndex="{Binding Path=(dxg:GridColumn.VisibleIndex)}"
                                dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.ActiveView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                Command="{Binding Path=Commands.ChangeColumnSortOrder}">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
              <dxght:ColumnHeaderTableViewHitTestAcceptor/>
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
          </dxg:GridColumnHeader>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>