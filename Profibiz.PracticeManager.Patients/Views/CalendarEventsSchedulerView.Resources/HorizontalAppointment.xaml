<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"
    xmlns:dxschd="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal"
    xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="cs">
    <dxschd:ToolTipVisibilityToVisibilityConverter x:Key="ToolTipVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxschd:AppointmentColorConverter x:Key="appointmentColorConverter" />
    <dxschd:BoolToThicknessConverter
        x:Key="selectionBoolToThicknessConverter"
        ThicknessWhenFalse="1"
        ThicknessWhenTrue="1" />
    <dxschd:AppointmentStatusDisplayTypeToDoubleConverter x:Key="StatusDisplayTypeToDoubleConverter" DefaultValue="5" />
    <dxschd:AppointmentStatusDisplayTypeToVisibilityConverter x:Key="AppointmentStatusDisplayTypeToVisibilityConverter" />
    <Color x:Key="defaultBorderColor" cs:Name="Color_0001">#FF0072C6</Color>

    <SolidColorBrush
        x:Key="borderBrush.IsSelected"
        cs:Name="SolidColorBrush_0001"
        Color="#FF0072C6" />

    <!--  @@@ DevExpress.Xpf.Themes\DevExpress.Xpf.Themes.Office2013DarkGray\DevExpress.Xpf.Scheduler\Office2013DarkGray\Appointments\HorizontalAppointment.xaml  -->
    <!--  взято уже с версии 16.2  -->
    <DataTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=AppointmentToolTipContentTemplate, ThemeName=Office2013DarkGray}">
        <TextBlock Text="{Binding ToolTipText}" />
    </DataTemplate>

    <!--  @@@ DevExpress.Xpf.Themes\DevExpress.Xpf.Themes.Office2013DarkGray\DevExpress.Xpf.Scheduler\Office2013DarkGray\Appointments\HorizontalAppointment.xaml  -->
    <!--  взято уже с версии 16.2  -->
    <ControlTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=HorizontalAppointmentTemplate, ThemeName=Office2013DarkGray}" TargetType="{x:Type dxschd:VisualHorizontalAppointmentControl}">
        <Grid
            x:Name="PART_ToolTipContainer"
            Margin="0,0,1,1"
            dxsch:SchedulerControl.HitTestType="AppointmentContent"
            dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}">
            <Grid.Resources>
                <SolidColorBrush x:Key="borderBrush" Color="{Binding ViewInfo.LabelColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource appointmentColorConverter}, ConverterParameter={StaticResource defaultBorderColor}}" />
            </Grid.Resources>
            <ToolTipService.ToolTip>
                <ToolTip
                    Content="{TemplateBinding ViewInfo}"
                    ContentTemplate="{Binding ViewInfo.View.AppointmentToolTipContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding ViewInfo.View.AppointmentToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToolTipVisibilityConverter}}" />
            </ToolTipService.ToolTip>
            <dxschd:BaseBorder
                x:Name="AppointmentBorder"
                cs:Name="AppointmentRoundedBorder_0001"
                DefaultBorderThickness="{Binding ViewInfo.Selected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource selectionBoolToThicknessConverter}}"
                DefaultCornerRadius="0"
                HasBottomBorder="{Binding ViewInfo.HasBottomBorder, RelativeSource={RelativeSource TemplatedParent}}"
                HasLeftBorder="{Binding ViewInfo.HasLeftBorder, RelativeSource={RelativeSource TemplatedParent}}"
                HasRightBorder="{Binding ViewInfo.HasRightBorder, RelativeSource={RelativeSource TemplatedParent}}"
                HasTopBorder="{Binding ViewInfo.HasTopBorder, RelativeSource={RelativeSource TemplatedParent}}">
                <dxschd:BaseBorder.Style>
                    <Style>
                        <Setter Property="dxschd:BaseBorder.BorderBrush" Value="{StaticResource borderBrush}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewInfo.Selected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                <Setter cs:Name="Setter_0001" Property="dxschd:BaseBorder.BorderBrush" Value="{StaticResource borderBrush.IsSelected}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dxschd:BaseBorder.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="ContentContainerStatusRow" Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border
                        x:Name="Status"
                        Height="{Binding StatusDisplayType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StatusDisplayTypeToDoubleConverter}}"
                        cs:Name="Border_0001"
                        Background="#FFABABAB"
                        BorderBrush="{StaticResource borderBrush}"
                        Visibility="{Binding StatusDisplayType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AppointmentStatusDisplayTypeToVisibilityConverter}}">
                        <dxsch:AppointmentStatusControl
                            cs:Name="AppointmentStatusControl_0001"
                            Background="#FFABABAB"
                            Orientation="Horizontal"
                            ViewInfo="{TemplateBinding ViewInfo}">
                            <Border Background="{Binding ViewInfo.Status.Brush, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{StaticResource borderBrush}" />
                        </dxsch:AppointmentStatusControl>
                    </Border>
                    <Border
                        x:Name="border"
                        Grid.Row="1"
                        Background="{Binding ViewInfo.LabelBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                    <ContentPresenter
                        x:Name="PART_Content"
                        Grid.Row="1"
                        Margin="6,3,6,3"
                        Content="{TemplateBinding ViewInfo}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                </Grid>
            </dxschd:BaseBorder>
            <Rectangle
                Width="5"
                HorizontalAlignment="Left"
                cs:Name="Rectangle_0001"
                dxsch:SchedulerControl.HitTestType="AppointmentResizingLeftEdge"
                dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}"
                Cursor="SizeWE"
                Fill="#00000000"
                IsHitTestVisible="True"
                Visibility="{Binding ViewInfo.CanResizeStart, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
            <Rectangle
                Width="5"
                HorizontalAlignment="Right"
                cs:Name="Rectangle_0002"
                dxsch:SchedulerControl.HitTestType="AppointmentResizingRightEdge"
                dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}"
                Cursor="SizeWE"
                Fill="#00000000"
                IsHitTestVisible="True"
                Visibility="{Binding Path=ViewInfo.CanResizeEnd, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DraggedStates">
                    <VisualState x:Name="NotDragged">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="AppointmentBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.15" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Dragged">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="AppointmentBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0.3"
                                Duration="0:0:0.15" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>