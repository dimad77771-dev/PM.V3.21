<dx:DXWindow
	x:Class="Profibiz.PracticeManager.Patients.Views.OneWorkInoutView"
	xmlns="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
	xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
	xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
	xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
	xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
	xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
	xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"
	xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:infrastructure="clr-namespace:Profibiz.PracticeManager.Infrastructure;assembly=Profibiz.PracticeManager.Infrastructure"
	xmlns:inter="http://www.codeplex.com/prism"
	xmlns:local="clr-namespace:DevExpress.DevAV;assembly=Profibiz.PracticeManager.InfrastructureExt"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:model="clr-namespace:DevExpress.DevAV;assembly=DevExpress.DevAV.v16.2.Data"
	xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
	xmlns:view="clr-namespace:DevExpress.DevAV.Views;assembly=Profibiz.PracticeManager.InfrastructureExt"
	Width="500"
	Height="400"
	Title="Work Item"
	ResizeMode="NoResize"
	WindowStartupLocation="CenterScreen"
	ShowInTaskbar="{x:Static infrastructure:WindowInfo.ShowInTaskbar}"
	prism:ViewModelLocator.AutoWireViewModel="True"
	UseLayoutRounding="True"
	mc:Ignorable="d">

	<i:Interaction.Triggers>
		<inter:InteractionRequestTrigger SourceObject="{Binding OpenWindowInteractionRequest}">
			<infrastructure:ShowDXWindowsAction />
		</inter:InteractionRequestTrigger>
		<inter:InteractionRequestTrigger SourceObject="{Binding CloseInteractionRequest}">
			<infrastructure:CloseDXWindowsAction />
		</inter:InteractionRequestTrigger>
	</i:Interaction.Triggers>
	<dx:DXWindow.Resources>
		<ResourceDictionary>
			<local:PictureConverter x:Key="PictureConverter" />
		</ResourceDictionary>
	</dx:DXWindow.Resources>
	<dxmvvm:Interaction.Behaviors>
		<!--<dx:DXSplashScreenService ViewTemplate="{StaticResource WaitIndicatorDataTemplate}"/>-->
		<dx:DXMessageBoxService />
		<dxmvvm:EventToCommand
			EventName="Closing"
			Command="{Binding ClosingEventCommand}"
			PassEventArgsToCommand="True" />
	</dxmvvm:Interaction.Behaviors>

	<dx:LoadingDecorator Style="{StaticResource loadingDecoratorMain}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid
				Grid.Row="0"
				Background="Transparent"
				ShowGridLines="False">
				<dx:DXBorder
					Margin="0"
					BorderThickness="0,0,0,1"
					BorderBrush="#A0A0A0">
					<Grid Margin="10">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<dxlc:LayoutItemLabel
							Grid.Row="0"
							Grid.Column="0"
							Content="Specialist"
							Style="{StaticResource layoutItemLabelStyle1Left}" />
						<dxe:ComboBoxEdit
							Grid.Row="0"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							EditValue="{Binding Entity.ServiceProviderRowId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnSourceUpdated=True}"
							IsTextEditable="False"
							DisplayMember="FullName"
							ValueMember="RowId"
							NullValueButtonPlacement="EditBox"
							PopupContentTemplate="{StaticResource popupFormExtentedContentTemplate}"
							ItemsSource="{Binding ServiceProviders, Source={StaticResource lookupDataProvider}}"
							Style="{StaticResource baseEditStyle1}" />

						<dxlc:LayoutItemLabel
							Grid.Row="1"
							Grid.Column="0"
							Content="Date"
							Style="{StaticResource layoutItemLabelStyle1Left}" />
						<dxe:DateEdit
							Grid.Row="1"
							Grid.Column="1"
							Width="100"
							Margin="4"
							EditValue="{Binding Entity.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
							Style="{StaticResource baseEditStyle1}">
						</dxe:DateEdit>


						<dxlc:LayoutItemLabel
							Grid.Row="2"
							Grid.Column="0"
							Content="Start"
							Style="{StaticResource layoutItemLabelStyle1Left}" />
						<dxe:ButtonEdit
							Grid.Row="2"
							Grid.Column="1"
							Width="100"
							Margin="4"
							AllowDefaultButton="False"
							EditValue="{Binding Entity.StartTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
							EditValuePostMode="Immediate"
							IsEnabled="{Binding Entity.IsEnabledStartFinishTime}"
							IsReadOnly="{Binding IsReadOnly}"
							Style="{StaticResource TimeButtonEditStyle}"
							ValidateOnEnterKeyPressed="True"
							ValidateOnTextInput="True">
							<dxe:ButtonEdit.Buttons>
								<dxe:SpinButtonInfo IsDefaultButton="true" SpinStyle="Vertical" />
							</dxe:ButtonEdit.Buttons>
							<dxmvvm:Interaction.Behaviors>
								<dxmvvm:EventToCommand
									Command="{Binding SpinStartTimeCommand}"
									EventName="Spin"
									PassEventArgsToCommand="True" />
								<infrastructure:UIElementBehavior Manager="{Binding UIManagerStartTime}" />
							</dxmvvm:Interaction.Behaviors>
						</dxe:ButtonEdit>

						<dxlc:LayoutItemLabel
							Grid.Row="3"
							Grid.Column="0"
							Content="Finish"
							Style="{StaticResource layoutItemLabelStyle1Left}" />
						<dxe:ButtonEdit
							Grid.Row="3"
							Grid.Column="1"
							Width="100"
							Margin="4"
							AllowDefaultButton="False"
							EditValue="{Binding Entity.FinishTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
							EditValuePostMode="Immediate"
							AllowNullInput="True"
							NullValueButtonPlacement="EditBox"
							IsEnabled="{Binding Entity.IsEnabledStartFinishTime}"
							IsReadOnly="{Binding IsReadOnly}"
							Style="{StaticResource TimeButtonEditStyle}"
							ValidateOnEnterKeyPressed="True"
							ValidateOnTextInput="True">
							<dxe:ButtonEdit.Buttons>
								<dxe:SpinButtonInfo IsDefaultButton="true" SpinStyle="Vertical" />
							</dxe:ButtonEdit.Buttons>
							<dxmvvm:Interaction.Behaviors>
								<dxmvvm:EventToCommand
									Command="{Binding SpinStartTimeCommand}"
									EventName="Spin"
									PassEventArgsToCommand="True" />
								<infrastructure:UIElementBehavior Manager="{Binding UIManagerStartTime}" />
							</dxmvvm:Interaction.Behaviors>
						</dxe:ButtonEdit>


						<dxlc:LayoutItemLabel
							Grid.Row="4"
							Grid.Column="0"
							Content="Description"
							Style="{StaticResource layoutItemLabelStyle1Left}" />
						<dxe:TextEdit
							Grid.Row="4"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							EditValue="{Binding Entity.Description, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
							IsReadOnly="{Binding IsReadOnly}"
							Style="{StaticResource baseEditStyle1}"
							Height="40"
							TextWrapping="Wrap"
							AcceptsReturn="True"
							VerticalScrollBarVisibility="Auto"
							VerticalContentAlignment="Top" />






					</Grid>
				</dx:DXBorder>
			</Grid>



			<infrastructure:CommandPanelView Grid.Row="1" />
		</Grid>
	</dx:LoadingDecorator>
</dx:DXWindow>